$breakpoints:  (
  "xs": 25em, // 400px
  "sm": 34em, // 544px
  "md": 48em, // 768px
  "lg": 60em, // 960px
  "xl": 80em, // 1280px
  "xxl": 90em // 1440px
);
 
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }
    // If the breakpoint doesn't exist in the map.
  }
  @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin generateSpacing($prefix, $property, $position, $spacing, $length) {
  // Loop through all of the length
  @for $i from 0 through $length {
    // create the class
    .#{$prefix}-#{$property}-#{$position}--#{$i} {
      //crreate property with size
      #{$property}-#{$position}: $spacing * $i;
    }
  }
}

/* use example  @include generateSpacing(zen, margin, top, 8px, 10); */

// Animations
@keyframes fade-in {
  0% {
    display: none;
    opacity: 0;
  }

  1% {
    display: block;
    opacity: 0;
  }

  100% {
    display: block;
    opacity: 1;
  }
}

@mixin zen-animation-fade-in {
  animation: fade-in 0.2s ease-out;
}
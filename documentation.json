{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b2acf0085cb38b048bb02002ed2bd18290b72f2760bdb23c37071e2c6464b8f3c652a6a7c130d11984f35f6e33fe97fec2d6d67515d6dc38f7609fb3061cb053",
            "file": "projects/lib-tester/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tableData",
                    "defaultValue": "[\n    {\n      name: 'Hammerer Maccabeus',\n      types: 'Holy/Fire',\n      attack: 1,\n      defense: 1,\n      speed: 1,\n      healing: 1,\n      recovery: 1,\n      health: 5\n    },\n    {\n      name: 'Ethereal Moodmorph',\n      types: 'Water/Fire',\n      attack: 1,\n      defense: 1,\n      speed: 1,\n      healing: 1,\n      recovery: 1,\n      health: 5\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "defaultValue": "'lib-tester'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAction",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'lib-tester';\n\n  tableData = [\n    {\n      name: 'Hammerer Maccabeus',\n      types: 'Holy/Fire',\n      attack: 1,\n      defense: 1,\n      speed: 1,\n      healing: 1,\n      recovery: 1,\n      health: 5\n    },\n    {\n      name: 'Ethereal Moodmorph',\n      types: 'Water/Fire',\n      attack: 1,\n      defense: 1,\n      speed: 1,\n      healing: 1,\n      recovery: 1,\n      health: 5\n    },\n  ];\n  \n  public formGroup: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    \n    this.formGroup = this.formBuilder.group({\n      field1: ['',Validators.required],\n      field2: [true, Validators.required],\n      field3: ['', Validators.required]\n    })\n  }\n\n  public onAction(event: Event) {\n    console.log(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n    <zen-input-text [disabled]=\"true\" formControlName=\"field1\" label=\"pippo\" [additionalClasses]=\"['pippo']\" (keyupChange)=\"onAction($event)\" placeholder=\"place\"></zen-input-text>\n    <zen-input-checkbox [disabled]=\"true\" formControlName=\"field2\">labbel text</zen-input-checkbox>\n    <zen-input-radio  formControlName=\"field3\">labbel text</zen-input-radio>\n</div>"
        },
        {
            "name": "InputBaseComponent",
            "id": "component-InputBaseComponent-8bfcab28dcff64ea1e4d0bea4abbfe09bcb4bdb86298a3cd6d5927a51d0b8b21b3589ce041a5a34c6fd402c2a8aa031ac48fe6b00f9bf975870f632ccf08004e",
            "file": "projects/zen-uikit-lib/src/lib/components/input-base/input-base.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "validateOnBlur",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "keyupChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onBlurError",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onFocusError",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | null",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "`input_${uuid()}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isFocused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ref",
                    "defaultValue": "{\n    markForCheck: () => {}\n  } as ChangeDetectorRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef | null",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "translateService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService | null | undefined",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onKeyup",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFormControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setInjectedServices",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, ChangeDetectorRef, Component, EventEmitter, Injector, Input, OnDestroy, Output, Type, ElementRef } from '@angular/core';\nimport { FormControl, NgControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { v4 as uuid } from 'uuid';\nimport { Subscription } from 'rxjs';\n\nimport { INPUT_BASE_ERROR_PREFIX } from '../../models/input.model';\n\n@Component({ template: '' })\nexport abstract class InputBaseComponent implements AfterViewInit, OnDestroy {\n  @Input() disabled: boolean = false;\n  @Input() label: string = '';\n  @Input() ariaLabel: string = '';\n  @Input() maxLength: number = -1;\n  @Input() validateOnBlur: boolean = false;\n  @Output() keyupChange: EventEmitter<any> = new EventEmitter();\n  @Output() onFocusError: EventEmitter<any> = new EventEmitter();\n  @Output() onBlurError: EventEmitter<any> = new EventEmitter();\n  @Input() additionalClasses: string[] = [];\n\n  public id = `input_${uuid()}`;\n  public formControl: FormControl | undefined;\n  public formControlName: string | number | null = '';\n\n  public isFocused: boolean = false;\n\n  private subscriptions: Subscription = new Subscription();\n  private translateService: TranslateService | null | undefined;\n  elementRef: ElementRef;\n  protected ref: ChangeDetectorRef | null = {\n    markForCheck: () => {}\n  } as ChangeDetectorRef;\n\n  protected constructor(protected injector: Injector) {\n  }\n\n  ngAfterViewInit() {\n    this.setFormControl();\n    this.setInjectedServices();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  get errorMessage(): string {\n    const [firstErrorKey] = Object.keys(this.formControl?.errors || {});\n    const errorLabelKey = `${INPUT_BASE_ERROR_PREFIX}${firstErrorKey}`;\n\n    return this.translateService ? this.translateService.instant(errorLabelKey) : errorLabelKey;\n  }\n\n  get isInvalid(): boolean {\n    return Boolean(this.formControl && this.formControl.errors && this.formControl.touched);\n  }\n\n  public onKeyup($event: any) {\n    this.keyupChange.emit($event);\n  }\n\n  public onFocus($event: any) {\n    this.isFocused = true;\n    this.formControl?.updateValueAndValidity();\n  }\n\n  public onBlur($event: any) {\n    if (this.isInvalid) {\n      this.onBlurError.emit({\n        key: this.formControlName,\n        errors: this.formControl?.errors\n      });\n    }\n  }\n\n  private setInjectedServices() {\n    this.translateService = this.injector.get(TranslateService as Type<TranslateService>, null);\n    this.ref = this.injector.get(ChangeDetectorRef as Type<ChangeDetectorRef>, null);\n    this.elementRef = this.injector.get(ElementRef as Type<ElementRef>);\n\n    if (this.ref) {\n      // Detect changes to show pending error (if present)\n      this.ref.detectChanges();\n    }\n  }\n\n  private setFormControl() {\n    const ngControl = this.injector.get(NgControl as Type<NgControl>);\n    console.log(ngControl)\n    if (ngControl) {\n      this.formControl = ngControl.control as FormControl;\n      this.formControlName = ngControl.name;\n      this.subscriptions.add(\n        this.formControl?.statusChanges.subscribe(() => {\n          this.ref?.markForCheck();\n        })\n      );\n    } else {\n      throw Error('Missing ngControl');\n    }\n  }\n  \n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "modifierKind": [
                    122
                ],
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "errorMessage": {
                    "name": "errorMessage",
                    "getSignature": {
                        "name": "errorMessage",
                        "type": "string",
                        "returnType": "string",
                        "line": 46
                    }
                },
                "isInvalid": {
                    "name": "isInvalid",
                    "getSignature": {
                        "name": "isInvalid",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 53
                    }
                }
            }
        },
        {
            "name": "InputCheckboxComponent",
            "id": "component-InputCheckboxComponent-b0b3335b735c809c70cd1d09d993b2d92af30b5471f2c077b1bc6bd45f14b438ab5d325fd6da1f7ab8b4586083f7ecc65b7df7286547aad33ed7a7bf30d5fa8b",
            "file": "projects/zen-uikit-lib/src/lib/components/input-checkbox/input-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputCheckboxComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "zen-input-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isHTML",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nisHTML says that the component will render html elements in content\n",
                    "description": "<p>isHTML says that the component will render html elements in content</p>\n",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "additionalClasses",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "validateOnBlur",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                },
                {
                    "name": "keyupChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onBlurError",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onFocusError",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "innerValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | null",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "`input_${uuid()}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "isFocused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "ref",
                    "defaultValue": "{\n    markForCheck: () => {}\n  } as ChangeDetectorRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef | null",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "translateService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService | null | undefined",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getClassFromHostAttribute",
                    "args": [
                        {
                            "name": "hostAttribute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nset the class defined in HOST_ATTRIBUTES_CLASS\nconst HOST_ATTRIBUTES_CLASS: any = {\n'zen-small': 'zen-input-checkbox--small',\n'zen-switch': 'zen-input-checkbox--switch'\n};\n",
                    "description": "<p>set the class defined in HOST_ATTRIBUTES_CLASS\nconst HOST_ATTRIBUTES_CLASS: any = {\n&#39;zen-small&#39;: &#39;zen-input-checkbox--small&#39;,\n&#39;zen-switch&#39;: &#39;zen-input-checkbox--switch&#39;\n};</p>\n",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "hostAttribute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasHostAttributes",
                    "args": [
                        {
                            "name": "attributes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetects if component has host attributes to set the variatons\n\nconst HOST_ATTRIBUTES: string[] = [\n'zen-small',\n'zen-switch'\n];\n",
                    "description": "<p>Detects if component has host attributes to set the variatons</p>\n<p>const HOST_ATTRIBUTES: string[] = [\n&#39;zen-small&#39;,\n&#39;zen-switch&#39;\n];</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "attributes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onKeyup",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "setFormControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "setInjectedServices",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ChangeDetectionStrategy, Component, OnInit, Injector, Output, Input, EventEmitter, AfterViewInit, forwardRef } from '@angular/core';\nimport { InputBaseComponent } from '../input-base/input-base.component';\n\nconst HOST_ATTRIBUTES_CLASS: any = {\n  'zen-small': 'zen-input-checkbox--small',\n  'zen-switch': 'zen-input-checkbox--switch'\n};\nconst HOST_ATTRIBUTES: string[] = [\n  'zen-small',\n  'zen-switch'\n];\n\n@Component({\n  selector: 'zen-input-checkbox',\n  templateUrl: './input-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputCheckboxComponent),\n    multi: true\n  }]\n})\nexport class InputCheckboxComponent extends InputBaseComponent implements ControlValueAccessor, AfterViewInit {\n\n  private innerValue: boolean;\n  onTouched: (val: any) => void;\n  onChange: (val: any) => void;\n\n  @Output() clicked = new EventEmitter();\n\n  /**\n   * isHTML says that the component will render html elements in content\n   */\n  @Input() isHTML: boolean;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  override ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    for (const attr of HOST_ATTRIBUTES) {\n      if (this.hasHostAttributes(attr)) {\n        const classFromAttribute = InputCheckboxComponent.getClassFromHostAttribute(attr);\n        this.additionalClasses = [...this.additionalClasses, classFromAttribute];\n      }\n    }\n  }\n\n  /**\n  * set the class defined in HOST_ATTRIBUTES_CLASS\n  * const HOST_ATTRIBUTES_CLASS: any = {\n    'zen-small': 'zen-input-checkbox--small',\n    'zen-switch': 'zen-input-checkbox--switch'\n    };\n  */\n  private static getClassFromHostAttribute(hostAttribute: string) {\n    return HOST_ATTRIBUTES_CLASS[hostAttribute] || 'zen-input-checkbox--default';\n  }\n\n  private get hostElement() {\n    return this.elementRef?.nativeElement;\n  }\n\n/**\n * Detects if component has host attributes to set the variatons\n * \n    const HOST_ATTRIBUTES: string[] = [\n    'zen-small',\n    'zen-switch'\n    ];\n */\nprivate hasHostAttributes(...attributes: string[]) {\n    return attributes.some(attribute => this.hostElement.hasAttribute(attribute));\n  }\n\n  get value(): any {\n    return this.innerValue;\n  }\n\n  set value(obj: any) {\n    if (obj !== this.innerValue) {\n      this.innerValue = obj;\n      this.onChange(obj);\n      this.onTouched(obj);\n    }\n  }\n\n  writeValue(obj: any): void {\n    if (obj !== this.innerValue) {\n      this.innerValue = obj;\n      this.ref?.markForCheck();\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  onClick(value: any) {\n    this.clicked.emit(value);\n    this.hostElement.blur();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "InputBaseComponent",
            "implements": [
                "ControlValueAccessor",
                "AfterViewInit"
            ],
            "accessors": {
                "hostElement": {
                    "name": "hostElement",
                    "getSignature": {
                        "name": "hostElement",
                        "type": "",
                        "returnType": "",
                        "line": 62
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "obj",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 82,
                        "jsdoctags": [
                            {
                                "name": "obj",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "any",
                        "returnType": "any",
                        "line": 78
                    }
                }
            },
            "templateData": "<div class=\"zen-input-checkbox\"\n     [class.zen-input-checkbox--disabled]=\"disabled\"\n     [class.zen-input-checkbox--html]=\"isHTML\"\n     [ngClass]=\"additionalClasses\"\n>\n  <input class=\"zen-form-checkbox\" type=\"checkbox\"\n         [id]=\"id\"\n         [disabled]=\"disabled\"\n         [(ngModel)]=\"value\"\n         (click)=\"onClick(value)\"\n  >\n  <label class=\"zen-input-checkbox__label\"\n         [for]=\"id\"\n  >\n    <ng-content></ng-content>\n  </label>\n</div>\n\n"
        },
        {
            "name": "InputRadioComponent",
            "id": "component-InputRadioComponent-639b63c0cc2237f9294c45ee2b25225624e6b7c222f61db087e12299c065719f3f4769cc5babe4cc60403a995d1efa470252fa724fff36d0e9e53ae29b1de766",
            "file": "projects/zen-uikit-lib/src/lib/components/input-radio/input-radio.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputRadioComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "zen-input-radio",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input-radio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "groupName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isHTML",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "additionalClasses",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "validateOnBlur",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "keyupChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onBlurError",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onFocusError",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "innerValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | null",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "`input_${uuid()}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "isFocused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "ref",
                    "defaultValue": "{\n    markForCheck: () => {}\n  } as ChangeDetectorRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef | null",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "translateService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService | null | undefined",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onKeyup",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "setFormControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "setInjectedServices",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { ChangeDetectionStrategy, Component, OnInit, Injector, forwardRef, AfterViewInit, Input } from '@angular/core';\nimport { InputBaseComponent } from '../input-base/input-base.component';\n\n@Component({\n  selector: 'zen-input-radio',\n  templateUrl: './input-radio.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputRadioComponent),\n    multi: true\n  }]\n})\nexport class InputRadioComponent extends InputBaseComponent implements ControlValueAccessor, AfterViewInit {\n  @Input() groupName: string;\n  @Input() value: any;\n  @Input() isHTML: boolean;\n  constructor(injector: Injector) {\n    super(injector);\n  }\n  \n  onTouched: (val: any) => void;\n  onChange: (val: any) => void;\n  innerValue: string;\n\n  get isChecked(): boolean {\n    return this.modelValue === this.value;\n  }\n\n  get modelValue(): any {\n    return this.innerValue;\n  }\n\n  set modelValue(obj: any) {\n    this.innerValue = obj;\n    this.onChange(obj);\n    this.onTouched(obj);\n  }\n\n  writeValue(obj: any) {\n    this.innerValue = obj;\n    this.ref?.markForCheck();\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "InputBaseComponent",
            "implements": [
                "ControlValueAccessor",
                "AfterViewInit"
            ],
            "accessors": {
                "isChecked": {
                    "name": "isChecked",
                    "getSignature": {
                        "name": "isChecked",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 27
                    }
                },
                "modelValue": {
                    "name": "modelValue",
                    "setSignature": {
                        "name": "modelValue",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "obj",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 35,
                        "jsdoctags": [
                            {
                                "name": "obj",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "modelValue",
                        "type": "any",
                        "returnType": "any",
                        "line": 31
                    }
                }
            },
            "templateData": "<div class=\"zen-input-radio\"\n     [class.zen-input-radio--html]=\"isHTML\"\n     [class.zen-input-radio--disabled]=\"disabled\">\n  <input type=\"radio\"\n         class=\"zen-input-radio__input\"\n         [id]=\"id\"\n         [name]=\"groupName\"\n         [value]=\"value\"\n         [disabled]=\"disabled\"\n         [attr.aria-label]=\"ariaLabel ? ariaLabel : null\"\n         [checked]=\"isChecked\"\n         [(ngModel)]=\"modelValue\">\n  <label class=\"zen-input-radio__label\" [for]=\"id\">\n    <ng-content></ng-content>\n  </label>\n</div>\n"
        },
        {
            "name": "InputTextComponent",
            "id": "component-InputTextComponent-12d0039c9095c9117a2c42ca53e3e008796fb9e954202918a3767beee4a94e732a6f7602ce425a3c8c09670ba67476915bc7c26291dc35a2f016d42d5caa5f42",
            "file": "projects/zen-uikit-lib/src/lib/components/input-text/input-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputTextComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "zen-input-text",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "additionalClasses",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "validateOnBlur",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "keyupChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onBlurError",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onFocusError",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "innerValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | null",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "`input_${uuid()}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "isFocused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "ref",
                    "defaultValue": "{\n    markForCheck: () => {}\n  } as ChangeDetectorRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef | null",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "translateService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService | null | undefined",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getClassFromHostAttribute",
                    "args": [
                        {
                            "name": "hostAttribute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "hostAttribute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasHostAttributes",
                    "args": [
                        {
                            "name": "attributes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "attributes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "onKeyup",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "setFormControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                },
                {
                    "name": "setInjectedServices",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "InputBaseComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, ChangeDetectionStrategy, Component, forwardRef, Injector, Input, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputBaseComponent } from '../input-base/input-base.component';\n\nconst BUTTON_HOST_ATTRIBUTES_CLASS: any = {\n  'zen-small': 'zen-input--small',\n  'zen-medium': 'zen-input--medium'\n};\nconst BUTTON_HOST_ATTRIBUTES: string[] = [\n  'zen-small',\n  'zen-medium'\n];\n@Component({\n  selector: 'zen-input-text',\n  templateUrl: './input-text.component.html',\n  styles: [\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputTextComponent),\n    multi: true\n  }]\n})\nexport class InputTextComponent extends InputBaseComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  @Input() placeholder: string = '';\n  @Input() type = 'text';\n\n  onTouched!: (val: any) => void;\n  private innerValue: string = '';\n  private onChange!: (val: any) => void;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  private static getClassFromHostAttribute(hostAttribute: string): string {\n    return BUTTON_HOST_ATTRIBUTES_CLASS[hostAttribute] || '';\n  }\n\n  private get hostElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  private hasHostAttributes(...attributes: string[]): boolean {\n    return attributes.some(attribute => this.hostElement.hasAttribute(attribute));\n  }\n\n  get value(): any {\n    return this.innerValue;\n  }\n\n  get isFilled(): boolean {\n    return Boolean(this.innerValue || this.placeholder);\n  }\n\n  set value(obj: any) {\n    if (obj !== this.innerValue) {\n      this.innerValue = obj;\n      this.onChange(this.innerValue);\n      this.onTouched(this.innerValue);\n    }\n  }\n  \n  writeValue(obj: any): void {\n    this.innerValue = obj;\n    this.ref?.markForCheck();\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  override ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    for (const attr of BUTTON_HOST_ATTRIBUTES) {\n      if (this.hasHostAttributes(attr)) {\n        const classFromAttribute = InputTextComponent.getClassFromHostAttribute(attr);\n        this.additionalClasses = [...this.additionalClasses, classFromAttribute ];\n      }\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "InputBaseComponent",
            "implements": [
                "ControlValueAccessor",
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "hostElement": {
                    "name": "hostElement",
                    "getSignature": {
                        "name": "hostElement",
                        "type": "",
                        "returnType": "",
                        "line": 41
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "obj",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 57,
                        "jsdoctags": [
                            {
                                "name": "obj",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "any",
                        "returnType": "any",
                        "line": 49
                    }
                },
                "isFilled": {
                    "name": "isFilled",
                    "getSignature": {
                        "name": "isFilled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 53
                    }
                }
            },
            "templateData": "<div class=\"zen-input zen-input-text {{additionalClasses ? additionalClasses : ''}}\"\n     [class.zen-input--validate-on-blur]=\"validateOnBlur\"\n     [class.zen-input--focused]=\"isFocused\"\n     [class.zen-input-text--hidden]=\"type === 'hidden'\"\n     [class.zen-input-text--disabled]=\"disabled\"\n     [class.error]=\"isInvalid\"\n>\n<label class=\"zen-input__label\"\n*ngIf=\"label\"\n[for]=\"id\"\n[innerHTML]=\"label\"\n></label>\n  <input class=\"zen-input__input {{additionalClasses ? additionalClasses : ''}}\"\n         [type]=\"type\"\n         [id]=\"id\"\n         [disabled]=\"disabled\"\n         [class.zen-input__input--filled]=\"isFilled\"\n         [attr.aria-label]=\"ariaLabel ? ariaLabel : null\"\n         [attr.placeholder]=\"placeholder ? placeholder : null\"\n         [attr.maxlength]=\"maxLength ? maxLength : null\"\n         (blur)=\"onBlur(value)\"\n         (keyup)=\"onKeyup(value)\"\n         (focus)=\"onFocus(value)\"\n         [(ngModel)]=\"value\"\n         #inputText\n  />\n  <div class=\"zen-input__error\" *ngIf=\"isInvalid && (!validateOnBlur || !isFocused)\">\n    {{errorMessage}}\n  </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-f5499e7ad0b673904b3255db4b9c71696b6841f5108236b22d14a3906a75322578b6018bf99c334134de352d64a75594edda7b03be177755aa9abb222d95e15b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lib-tester/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ZenUikitLibModule } from '../../../zen-uikit-lib/src/lib/zen-uikit-lib.module';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    ZenUikitLibModule,\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZenUikitLibModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZenUikitLibModule",
            "id": "module-ZenUikitLibModule-59381c51d42e97b5af5b8f806497c86933b89d147b98dcd24f2bda63ccffb2253a4f488996f0a318de37d849b35c6da135ffb993246ffea3d0e78b2b32951789",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/zen-uikit-lib/src/lib/zen-uikit-lib.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { InputTextComponent } from './components/input-text/input-text.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { InputCheckboxComponent } from './components/input-checkbox/input-checkbox.component';\nimport { InputRadioComponent } from './components/input-radio/input-radio.component';\n\n\nconst components = [\n  InputTextComponent,\n  InputCheckboxComponent,\n  InputRadioComponent\n]\n@NgModule({\n  declarations: [\n    ...components\n  ],\n  imports: [\n    CommonModule,\n\n    // Angular deps\n    FormsModule,\n    ReactiveFormsModule,\n    OverlayModule,\n    PortalModule\n\n  ],\n  exports: [\n    ...components,\n  ]\n})\nexport class ZenUikitLibModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputCheckboxComponent"
                        },
                        {
                            "name": "InputRadioComponent"
                        },
                        {
                            "name": "InputTextComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputCheckboxComponent"
                        },
                        {
                            "name": "InputRadioComponent"
                        },
                        {
                            "name": "InputTextComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "BUTTON_HOST_ATTRIBUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zen-uikit-lib/src/lib/components/input-text/input-text.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\n  'zen-small',\n  'zen-medium'\n]"
            },
            {
                "name": "BUTTON_HOST_ATTRIBUTES_CLASS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zen-uikit-lib/src/lib/components/input-text/input-text.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{\n  'zen-small': 'zen-input--small',\n  'zen-medium': 'zen-input--medium'\n}"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zen-uikit-lib/src/lib/zen-uikit-lib.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  InputTextComponent,\n  InputCheckboxComponent,\n  InputRadioComponent\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-tester/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zen-uikit-lib/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Input-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Input-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-tester/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-tester/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Input-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HOST_ATTRIBUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zen-uikit-lib/src/lib/components/input-checkbox/input-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\n  'zen-small',\n  'zen-switch'\n]"
            },
            {
                "name": "HOST_ATTRIBUTES_CLASS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zen-uikit-lib/src/lib/components/input-checkbox/input-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{\n  'zen-small': 'zen-input-checkbox--small',\n  'zen-switch': 'zen-input-checkbox--switch'\n}"
            },
            {
                "name": "INPUT_BASE_ERROR_PREFIX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zen-uikit-lib/src/lib/models/input.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'input-error-'"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-tester/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zen-uikit-lib/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Input-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputTextComponent>",
                "defaultValue": "(args: InputTextComponent) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/zen-uikit-lib/src/lib/components/input-text/input-text.component.ts": [
                {
                    "name": "BUTTON_HOST_ATTRIBUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zen-uikit-lib/src/lib/components/input-text/input-text.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\n  'zen-small',\n  'zen-medium'\n]"
                },
                {
                    "name": "BUTTON_HOST_ATTRIBUTES_CLASS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zen-uikit-lib/src/lib/components/input-text/input-text.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{\n  'zen-small': 'zen-input--small',\n  'zen-medium': 'zen-input--medium'\n}"
                }
            ],
            "projects/zen-uikit-lib/src/lib/zen-uikit-lib.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zen-uikit-lib/src/lib/zen-uikit-lib.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  InputTextComponent,\n  InputCheckboxComponent,\n  InputRadioComponent\n]"
                }
            ],
            "projects/lib-tester/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-tester/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-tester/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/zen-uikit-lib/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zen-uikit-lib/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zen-uikit-lib/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/Input-text.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Input-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Input-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Input-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Input-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputTextComponent>",
                    "defaultValue": "(args: InputTextComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/lib-tester/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-tester/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/lib-tester/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-tester/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "projects/zen-uikit-lib/src/lib/components/input-checkbox/input-checkbox.component.ts": [
                {
                    "name": "HOST_ATTRIBUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zen-uikit-lib/src/lib/components/input-checkbox/input-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\n  'zen-small',\n  'zen-switch'\n]"
                },
                {
                    "name": "HOST_ATTRIBUTES_CLASS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zen-uikit-lib/src/lib/components/input-checkbox/input-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{\n  'zen-small': 'zen-input-checkbox--small',\n  'zen-switch': 'zen-input-checkbox--switch'\n}"
                }
            ],
            "projects/zen-uikit-lib/src/lib/models/input.model.ts": [
                {
                    "name": "INPUT_BASE_ERROR_PREFIX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zen-uikit-lib/src/lib/models/input.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'input-error-'"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/lib-tester/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-tester/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-tester/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-tester/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-tester/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/lib/components/input-base/input-base.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputBaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/lib/components/input-checkbox/input-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputCheckboxComponent",
                "coveragePercent": 7,
                "coverageCount": "3/38",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/lib/components/input-checkbox/input-checkbox.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOST_ATTRIBUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/lib/components/input-checkbox/input-checkbox.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOST_ATTRIBUTES_CLASS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/lib/components/input-radio/input-radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputRadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/36",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/lib/components/input-text/input-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/37",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/lib/components/input-text/input-text.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUTTON_HOST_ATTRIBUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/lib/components/input-text/input-text.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUTTON_HOST_ATTRIBUTES_CLASS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/lib/models/input.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INPUT_BASE_ERROR_PREFIX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/lib/zen-uikit-lib.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zen-uikit-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}